<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set up selection variables

currentSelection = 0;

numSelections = 2;

selectionX[0] = objPlayerSelectionBoxes.x + 332;
selectionY[0] = objPlayerSelectionBoxes.y + 140;
selectionActive[0] = true;
selectionNumHumans[0] = 1;

selectionX[1] = objPlayerSelectionBoxes.x + 332;
selectionY[1] = objPlayerSelectionBoxes.y + 290;
selectionActive[1] = true;
selectionNumHumans[1] = 2;

// Place selector on the screen
selector = instance_create(0, 0, objNumPlayersSelector);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Auto skip room in 1/2 seconds (disabled)
//alarm[0] = room_speed/2;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set music variables and start music

music = musTitleScreen;  // Replace with title screen music
loopMusic = true;

if(!audio_is_playing(music))
  audio_play_sound(music, 0, loopMusic);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set up analog repeat variables

analogHigh = false;
analogHigh2 = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset player wins

global.player1Wins = 0;
global.player2Wins = 0;
global.player3Wins = 0;
global.player4Wins = 0;

// 0 = tie, 1 = player 1, 2 = player 2, etc.
global.lastWinner = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stop music and change rooms
audio_stop_sound(music);
scrGoToNextGameRoom();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Debug (go straight to round complete with wins)
/*
global.player1Wins = 2;
global.player2Wins = 1;
global.player3Wins = 2;
global.player4Wins = 3;

// 0 = tie, 1 = player 1, 2 = player 2, etc.
global.lastWinner = 1;

room_goto(rmRoundComplete); // test line to go straight to round complete
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check for vertical selection (and play sound)

var directionChosen = 0;

// Check gamepad #1
var gamePad = 0;
var gamepadDirection = gamepad_axis_value(gamePad, gp_axislv);

if(gamepadDirection &lt; -0.3) {
  if(!analogHigh)
    directionChosen = -1;
  analogHigh = true;
} else if(gamepadDirection &gt; 0.3) {
  if(!analogHigh)
    directionChosen = 1;
  analogHigh = true;
} else {
  analogHigh = false;
}

// Check gamepad #2
var gamePad2 = 1;
var gamepadDirection2 = gamepad_axis_value(gamePad2, gp_axislv);

if(gamepadDirection2 &lt; -0.3) {
  if(!analogHigh2)
    directionChosen = -1;
  analogHigh2 = true;
} else if(gamepadDirection2 &gt; 0.3) {
  if(!analogHigh2)
    directionChosen = 1;
  analogHigh2 = true;
} else {
  analogHigh2 = false;
}

// Check keyboard
if (keyboard_check_pressed(vk_up)) {
  directionChosen = -1;
} else if (keyboard_check_pressed(vk_down)) {
  directionChosen = 1;
}

//Check d-pad
if (gamepad_button_check_pressed(0, gp_padu)) {
  directionChosen = -1;
} else if (gamepad_button_check_pressed(0, gp_padd)) {
  directionChosen = 1;
}

if(directionChosen != 0) {
  currentSelection = (currentSelection + directionChosen + numSelections) % numSelections;
  audio_play_sound(sndCursorSelectMove, 0, false);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move selector to proper location

selector.x = selectionX[currentSelection];
selector.y = selectionY[currentSelection];

global.numHumans = selectionNumHumans[currentSelection];
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for "select" button

// Check gamepad #1
var gamePad1 = 0;
var gamepadSelect1 = gamepad_button_check_pressed(gamePad1, gp_face1);

var gamePad2 = 1;
var gamepadSelect2 = gamepad_button_check_pressed(gamePad2, gp_face1);

// Check keyboard
var keyboardSelect = (keyboard_check_pressed(vk_enter) || keyboard_check_pressed(vk_space));

if(gamepadSelect1 || gamepadSelect2 || keyboardSelect){
  alarm[0] = 1;
  audio_play_sound(sndCursorSelectEnter, 0, false);  
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
