<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGhost</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Base variable setup

playerNum = 0;

facing = 1;

sprite = sprGhost;

moveSpeed = 5;

cdTimer1 = 0;
cdTimer2 = 0;

//List of actions
actionList = ds_map_create();

//Life
maxHp = 100;
hp = maxHp;

//For costumes
costume = noone;

//Varibles used in movement
force = 1000;
maxSpeed = 300;

//Jumping variables
// Base is 400
jumpHeight = 400;
deltaTime = 1/room_speed;
gm = 10 * 5;// * phy_mass;
//jumpForce = sqrt(2 * gravity * (jumpHeight)) + gravity * deltaTime * 0.5;
jumpForce = (sqrt(2 * gm * (jumpHeight)) + gm * deltaTime * 0.5);
minJumpSpeedUp = 250;
jumpDownRangeBottom = 50;
jumpDownRangeTop = 250;
jumpTimeRemaining = 0;
isJumping = false;
canJump = true;
beenReleased = true;

//For player controls
upKey = 0;
downKey = 0;
leftKey = 0;
rightKey = 0;
action1Key = 0;
action2Key = 0;
jumpKey = 0;

//Left stick, probably
hAxisPad = 0;
vAxisPad = 0;

action1Pad = 0;
action2Pad = 0;
jumpPad = 0;

padNum = 0;

isIdle = true;

image_speed = 30 / room_speed;

tint = c_white;

action1Sound[0] = 0;
action1Sound[1] = 0;
action2Sound[0] = 0;
action2Sound[1] = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Script variables

getAction = scrGetPlayerAction;

getLeft = scrGetPlayerLeft;
getRight = scrGetPlayerRight;
getJump = scrGetPlayerJump;
getUp = scrGetPlayerUp;
getJumpReleased = scrGetPlayerJumpRelease;
getUpReleased = scrGetPlayerUpRelease;
getAction1 = scrGetPlayerAction1;
getAction2 = scrGetPlayerAction2;
getUpHold = scrGetPlayerUpHold;
getDown = scrGetPlayerDown;

action1 = ds_map_create();
action2 = ds_map_create();


doAction1 = scrNullScript;
doAction2 = scrNullScript;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///"Current" variables

curForce = force;
curMaxSpeed = maxSpeed;
curMaxHp = maxHp;
curDoAction1 = doAction1;
curDoAction2 = doAction2;
curAction1 = action1;
curAction2 = action2;

curSprite = sprite;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check ghost actions
//calc_accel = (maxspeed/friction - maxspeed) / deltaTime
//calc_jumpforce = sqrt(2 * gravity * (jumpheight)) + gravity * deltaTime * 0.5

isIdle = true;

//phy_rotation = 0;
//phy_fixed_rotation = true;

/*
if (keyboard_check(rightKey)) {
  physics_apply_force(x, y, 200, 0);
  
  if (phy_linear_velocity_x &gt;= 200) {
    phy_linear_velocity_x = 200;
  }
}

if (keyboard_check(leftKey)) {
  physics_apply_force(x, y, -200, 0);  
  
  if (phy_linear_velocity_x &lt;= -200) {
    phy_linear_velocity_x = -200;
  }
}
*/

script_execute(getAction);
scrProcessGhostAction(self.id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
