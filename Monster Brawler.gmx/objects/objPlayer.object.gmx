<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Base variable setup

playerNum = instance_number(objPlayer);

//List of actions
actionList = ds_map_create();

//Life
hp = 100;

//Varibles used in movement
force = 1000;
maxSpeed = 300;

//Jumping variables
// Base is 100
jumpHeight = 200;
deltaTime = 1/room_speed;

jumpForce = -1 * (sqrt(2 * gravity.y * (jumpHeight)) + gravity.y * deltaTime * 0.5);
minBaseJump = jumpForce;
maxBaseJump = jumpForce;
minJump = minBaseJump;
maxJump = maxBaseJump;


//For player controls
upKey = 0;
downKey = 0;
leftKey = 0;
rightKey = 0;
action1Key = 0;
action2Key = 0;
jumpKey = 0;

//Left stick, probably
axisPad = 0;

action1Pad = 0;
action2Pad = 0;
jumpPad = 0;

padNum = 0;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Script variables

getAction = scrGetPlayerAction;

getLeft = scrGetPlayerLeft;
getRight = scrGetPlayerRight;
getJump = scrGetPlayerJump;
getAction1 = scrGetPlayerAction1;
getAction2 = scrGetPlayerAction2;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// For testing purposes for now

upKey = vk_up;
downKey = vk_down;
leftKey = vk_left;
rightKey = vk_right;
action1Key = ord('N');
action2Key = ord('M');
jumpKey = vk_space;

axisPad = gp_axislh;
action1Pad = gp_face3;
action2Pad = gp_face4;
jumpPad = gp_face1;

padNum = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check player actions
//calc_accel = (maxspeed/friction - maxspeed) / deltaTime
//calc_jumpforce = sqrt(2 * gravity * (jumpheight)) + gravity * deltaTime * 0.5


phy_rotation = 0;
phy_fixed_rotation = true;

/*
if (keyboard_check(rightKey)) {
  physics_apply_force(x, y, 200, 0);
  
  if (phy_linear_velocity_x &gt;= 200) {
    phy_linear_velocity_x = 200;
  }
}

if (keyboard_check(leftKey)) {
  physics_apply_force(x, y, -200, 0);  
  
  if (phy_linear_velocity_x &lt;= -200) {
    phy_linear_velocity_x = -200;
  }
}
*/

script_execute(getAction);
scrProcessAction(self.id);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control jumping


if (phy_linear_velocity_y &gt; 0){// &amp;&amp; phy_linear_velocity_y &lt; jumpForce) {
  physics_apply_impulse(x, y, 0, 10);
}


show_debug_message(phy_linear_velocity_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFloor">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop falling
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.400000005960464</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
